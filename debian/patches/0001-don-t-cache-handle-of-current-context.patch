From 1b7bb5bbe37e17b7a769df824695cbb6b188fc7e Mon Sep 17 00:00:00 2001
From: Josua Mayer <josua@solid-run.com>
Date: Wed, 10 Oct 2018 11:54:40 +0200
Subject: [PATCH 1/3] don't cache handle of current context

glvnd can not know when and if context handles become invalid after
an application calls eglDestroyContext.
Instead query the vendor library for this EGL internal state.

Signed-off-by: Josua Mayer <josua@solid-run.com>
---
 src/EGL/libegl.c        | 3 +--
 src/EGL/libeglabipriv.h | 4 +++-
 src/EGL/libeglcurrent.c | 5 ++---
 src/EGL/libeglcurrent.h | 1 -
 src/EGL/libeglvendor.c  | 1 +
 5 files changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/EGL/libegl.c b/src/EGL/libegl.c
index 54e3a28..d7eae20 100644
--- a/src/EGL/libegl.c
+++ b/src/EGL/libegl.c
@@ -587,7 +587,6 @@ static EGLBoolean InternalMakeCurrentVendor(
         apiState->currentDisplay = dpy;
         apiState->currentDraw = draw;
         apiState->currentRead = read;
-        apiState->currentContext = context;
     }
 
     return ret;
@@ -685,7 +684,7 @@ PUBLIC EGLBoolean EGLAPIENTRY eglMakeCurrent(EGLDisplay dpy,
         oldDpy = apiState->currentDisplay;
         oldDraw = apiState->currentDraw;
         oldRead = apiState->currentRead;
-        oldContext = apiState->currentContext;
+        oldContext = __eglGetCurrentContext();
 
         assert(oldContext != EGL_NO_CONTEXT);
 
diff --git a/src/EGL/libeglabipriv.h b/src/EGL/libeglabipriv.h
index 55eb9d4..a74b394 100644
--- a/src/EGL/libeglabipriv.h
+++ b/src/EGL/libeglabipriv.h
@@ -74,11 +74,13 @@ typedef struct __EGLdispatchTableStaticRec {
 
     EGLint (* getError) (void);
 
+    // EGL 1.4 functions
+    EGLContext (* getCurrentContext) (void);
+
 #if 0
     EGLDisplay (* getCurrentDisplay) (void);
     EGLSurface (* getCurrentSurface) (EGLint readdraw);
     EGLDisplay (* getDisplay) (EGLNativeDisplayType display_id);
-    EGLContext (* getCurrentContext) (void);
 #endif
 
     // EGL 1.5 functions. A vendor library is not requires to implement these.
diff --git a/src/EGL/libeglcurrent.c b/src/EGL/libeglcurrent.c
index b40cabe..cc85ac9 100644
--- a/src/EGL/libeglcurrent.c
+++ b/src/EGL/libeglcurrent.c
@@ -43,8 +43,8 @@ __EGLvendorInfo *__eglGetCurrentVendor(void)
 EGLContext __eglGetCurrentContext(void)
 {
     __EGLdispatchThreadState *state = __eglGetCurrentAPIState();
-    if (state != NULL) {
-        return state->currentContext;
+    if (state != NULL && state->currentVendor != NULL) {
+        return state->currentVendor->staticDispatch.getCurrentContext();
     } else {
         return EGL_NO_CONTEXT;
     }
@@ -172,7 +172,6 @@ __EGLdispatchThreadState *__eglCreateAPIState(void)
     apiState->currentDisplay = NULL;
     apiState->currentDraw = EGL_NO_SURFACE;
     apiState->currentRead = EGL_NO_SURFACE;
-    apiState->currentContext = EGL_NO_CONTEXT;
     apiState->currentVendor = NULL;
 
     __glvndPthreadFuncs.mutex_lock(&currentStateListMutex);
diff --git a/src/EGL/libeglcurrent.h b/src/EGL/libeglcurrent.h
index 8b63c96..a92b7de 100644
--- a/src/EGL/libeglcurrent.h
+++ b/src/EGL/libeglcurrent.h
@@ -54,7 +54,6 @@ typedef struct __EGLdispatchThreadStateRec {
     __EGLdisplayInfo *currentDisplay;
     EGLSurface currentDraw;
     EGLSurface currentRead;
-    EGLContext currentContext;
     __EGLvendorInfo *currentVendor;
 
     struct glvnd_list entry;
diff --git a/src/EGL/libeglvendor.c b/src/EGL/libeglvendor.c
index 7b8d6e7..f2cab13 100644
--- a/src/EGL/libeglvendor.c
+++ b/src/EGL/libeglvendor.c
@@ -220,6 +220,7 @@ static GLboolean LookupVendorEntrypoints(__EGLvendorInfo *vendor)
     LOADENTRYPOINT(swapInterval,                  "eglSwapInterval"                  );
     LOADENTRYPOINT(createPbufferFromClientBuffer, "eglCreatePbufferFromClientBuffer" );
     LOADENTRYPOINT(releaseThread,                 "eglReleaseThread"                 );
+    LOADENTRYPOINT(getCurrentContext,             "eglGetCurrentContext"             );
     LOADENTRYPOINT(waitClient,                    "eglWaitClient"                    );
     LOADENTRYPOINT(getError,                      "eglGetError"                      );
 #undef LOADENTRYPOINT
-- 
2.19.0

